# Hackathon Optimized Configuration
# Optimized for 2 vCPU, 6GB available RAM, 100GB NVMe, 2-3 users
# This provides full functionality with efficient resource usage

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: chattingo-hackathon
  annotations:
    description: "Hackathon-optimized Chattingo deployment"
    target-resources: "6GB RAM, 2 vCPU, 100GB NVMe"
    expected-users: "2-3 concurrent users"

# Use the base configuration
resources:
  - kustomization.yaml

# Hackathon-specific patches for resource optimization
patches:
  # Backend - Single instance, optimized for hackathon
  - target:
      kind: Deployment
      name: chattingo-backend
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "512Mi"
            cpu: "200m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
      - op: replace
        path: /spec/template/spec/containers/0/env/9/value
        value: "-Xmx768m -Xms384m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"

  # Frontend - Single instance, lightweight
  - target:
      kind: Deployment
      name: chattingo-frontend
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "150m"

  # MySQL - Optimized for hackathon with good performance
  - target:
      kind: StatefulSet
      name: mysql
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "512Mi"
            cpu: "150m"
          limits:
            memory: "1Gi"
            cpu: "300m"

  # Elasticsearch - Balanced configuration for logging
  - target:
      kind: Deployment
      name: elasticsearch
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "1Gi"
            cpu: "200m"
          limits:
            memory: "1.5Gi"
            cpu: "400m"
      - op: replace
        path: /spec/template/spec/containers/0/env/1/value
        value: "-Xms512m -Xmx1g"

  # Kibana - Efficient logging dashboard
  - target:
      kind: Deployment
      name: kibana
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "384Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

  # Filebeat - Lightweight log shipping
  - target:
      kind: DaemonSet
      name: filebeat
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"

  # Prometheus - Essential monitoring only
  - target:
      kind: Deployment
      name: prometheus
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "384Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

  # Grafana - Lightweight dashboards
  - target:
      kind: Deployment
      name: grafana
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "384Mi"
            cpu: "100m"

  # S3 Uploader - Reduced frequency for hackathon
  - target:
      kind: Deployment
      name: s3-uploader
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "50m"

  # cert-manager - Minimal SSL certificate management
  - target:
      kind: Deployment
      name: cert-manager
      namespace: cert-manager
    patch: |-
      - op: replace
        path: /spec/replicas
        value: 1
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "50m"

# Storage optimization for 100GB NVMe
- target:
    kind: PersistentVolume
    name: mysql-pv
  patch: |-
    - op: replace
      path: /spec/capacity/storage
      value: 20Gi

- target:
    kind: PersistentVolume
    name: elasticsearch-data-pv
  patch: |-
    - op: replace
      path: /spec/capacity/storage
      value: 15Gi

- target:
    kind: PersistentVolume
    name: chattingo-logs-pv
  patch: |-
    - op: replace
      path: /spec/capacity/storage
      value: 10Gi

# Hackathon-specific ConfigMap updates
configMapGenerator:
  - name: hackathon-config
    literals:
      - environment=hackathon
      - max_users=5
      - log_level=INFO
      - monitoring_interval=60s
      - s3_upload_frequency=6h
    options:
      labels:
        config-type: hackathon-optimized
